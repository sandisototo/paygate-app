<?php final class Connection { private static $instance = null; private static $pdo; public static function getInstance() {if (self::$instance === null) { self::$instance = new Connection(); }return self::$instance;}private function __construct(){/*$HOST = ""; $DB_NAME = ""; $USER = ""; $PASSWORD = "";*/try{/*self::$pdo = new PDO("mysql:host=".$HOST.";dbname=".$DB_NAME, $USER, $PASSWORD);*/self::$pdo = new PDO('sqlite::memory:');self::$pdo->setAttribute(PDO::ATTR_ERRMODE, PDO::ERRMODE_EXCEPTION);self::$pdo->setAttribute(PDO::ATTR_EMULATE_PREPARES, false);} catch(PDOException $e){die('Failed to Create DB Connection: '.$e->getMessage());}}private function __clone(){throw new Exception('use singleton getInstance');}protected function __wakeup(){throw new Exception('use singleton getInstance');}public function getPdo() {return self::$pdo;}public function executeSelect($select) {try {$con = self::$pdo;$query = $con->prepare($select);$query->execute(array());return $query->fetchAll(PDO::FETCH_ASSOC);} catch (PDOException $e) {throw new Exception($e->getMessage());}}public function executeCmd($query) {try {$con = self::$pdo;$query = $con->prepare($query);$query->execute(array());} catch (PDOException $e) {throw new Exception($e->getMessage());}}}