<?php include_once('BaseQuestion.php');class Question4 extends BaseQuestion {public function getData() {$data = array();$baseJsonString = "{\n" . "\t\"card\": {\n" . "\t\t\"cardNumber\": \"leCardNumber\",\n" . "\t\t\"cvv\": \"leCvv\",\n" . "\t\t\"cardExpiryDate\": \"leExpiry\",\n" . "\t\t\"budgetPeriod\": \"0\"\n" . "\t},\n" . "\t\"order\": {\n" . "\t\t\"merchantOrderId\": \"pgtest_leOrderId\",\n" . "\t\t\"currency\": \"ZAR\",\n" . "\t\t\"amount\": leAmount,\n" . "\t\t\"customerDetails\": {\n" . "\t\t\t\"customer\": {\n" . "\t\t\t\t\"firstName\": \"leFirstName\",\n" . "\t\t\t\t\"middleName\": \"leMiddleName\",\n" . "\t\t\t\t\"lastName\": \"leLastName\",\n" . "\t\t\t\t\"password\": \"lePassword\",\n" . "\t\t\t\t\"email\": [\"info@paygate.co.za\"]\n" . "\t\t\t}\n" . "\t\t}\n" . "\t},\n" . "\t\"from\": \"PayProduct\",\n" . "\t\"userDefinedFields\": [],\n" . "\t\"requestIpV4\": \"127.0.0.1\",\n" . "\t\"created\": 1490001437507\n" . "}";$str = '' . $baseJsonString;$this->randomData($str);$data[] = $str;if ((bool) mt_rand(0,1)) {$str = '' . $baseJsonString;$this->randomData($str);$data[] = $str;}return $data;}public function getInstructions() {return include_once('questions/Q4.php');}private function generateCardNumber() {$cards = array("4000006666000004", "5066666666666605", "4000000990000004", "378282246310005", "38520000023237", "4000000000000028", "4455555555555544", "6759649826438453");return $cards[mt_rand(0, (count($cards) - 1))];}private function generateCvv() {$cvv = '';$ln = (3 + mt_rand(0,1));for ($i = 0; $i < $ln; $i++) {$cvv .= mt_rand(1,10);}if (((bool) mt_rand(0,1)) && ((bool) mt_rand(0,1)) && ((bool) mt_rand(0,1))) {$cvv .= mt_rand(1,9);}return $cvv;}private function generateExpiry() {$month = ('00' . (mt_rand(1,11) + 1));$year = (2017 + (mt_rand(0,7)));$exp = $month.$year;return substr($exp,(strlen($exp) - 6), strlen($exp));}private function generateFirstName() {$names  = array("Piet", "Alec", "Barry", "Morne", "David", "Hanno", "Chanel", "Abdul", "Jeffrey", "Jan");return $names[mt_rand(0, (count($names) - 1))];}private function generateMiddleName() {$names  = array("Gerhardus", "Dude", "Hacker", "Vader", "Vladmir");return $names[mt_rand(0, (count($names) - 1))];}private function generateLastName() {$names  = array("Venter", "Erasmus", "Hollis", "Havenga", "Beukes", "Avenant", "Carstens", "Sulayman", "Nqabeni", "Mostert");return $names[mt_rand(0, (count($names) - 1))];}private function generatePassword($length) {$characters = '01234567890ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz01234567890';$charactersLength = strlen($characters);$randomString = '';for ($i = 0; $i < $length; $i++) {$randomString .= $characters[mt_rand(0, $charactersLength - 1)];}return $randomString;}private function randomData (&$jsonStr) {$dt = new DateTime();$jsonStr = str_replace('leCardNumber', $this->generateCardNumber(), $jsonStr);$jsonStr = str_replace('leCvv', $this->generateCvv(), $jsonStr);$jsonStr = str_replace('leExpiry', $this->generateExpiry(), $jsonStr);$jsonStr = str_replace('leFirstName', $this->generateFirstName(), $jsonStr);$jsonStr = str_replace('leMiddleName', $this->generateMiddleName(), $jsonStr);$jsonStr = str_replace('leLastName', $this->generateLastName(), $jsonStr);$jsonStr = str_replace('lePassword', $this->generatePassword(5 + mt_rand(1,5)), $jsonStr);$jsonStr = str_replace('leOrderId',  $dt->format('H:i:s'), $jsonStr);$jsonStr = str_replace('leAmount', (100 + mt_rand(1,1000)), $jsonStr);}}